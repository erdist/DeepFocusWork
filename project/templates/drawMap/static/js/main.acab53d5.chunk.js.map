{"version":3,"sources":["components/rectangle.js","components/tools.js","components/kanvas.js","App.js","serviceWorker.js","index.js"],"names":["Component","Tools","state","uploading","fileInput","React","createRef","onChange","e","isReadyToSaveHaveHandler","props","target","files","length","changeImage","setState","fileURL","URL","createObjectURL","fetch","method","then","response","blob","reader","FileReader","readAsDataURL","onload","result","preventDefault","imageUpload","current","click","this","showImageHandler","selectedTool","selectTool","saveShape","Menu","icon","style","border","Item","backgroundColor","color","name","content","onClick","faRaspberryPi","handleUndo","handleClear","Icon","type","id","ref","hidden","PureComponent","Canvas","drawShapes","a","async","layer","shapes","showImage","image","destroyChildren","Konva","Image","fromURL","add","zIndex","draw","s","Line","points","shape","stroke","fill","closed","draggable","Rect","Ring","Path","scaleX","scaleY","undefined","xxx","findOne","destroy","point","line","circleDrawHandler","ring","x","evt","layerX","y","layerY","outerRadius","innerRadius","strokeWidth","setAttrs","circle","console","log","attrs","Math","sqrt","pow","rectangleDrawHandler","width","rectangle","height","polygonDrawHandler","polygon","raspberryDrawHandler","data","raspBerry","mouseMoveHandler","oldTarget","mouseUpHandler","changeShape","_id","tr","Transformer","attachTo","on","parent","push","addCircle","stage","Stage","window","innerWidth","innerHeight","container","visible","Layer","App","isReadyToSave","base64image","Promise","resolve","FormData","csrf_token","document","getElementById","value","append","body","json","imageURL","file","catch","err","alert","ReactDOM","render","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acab53d5.chunk.js","sourcesContent":["import {Rect, Transformer} from \"react-konva\";\nimport React, {Component,createRef} from \"react\";\n\nexport class Rectangle extends Component{\n    componentDidMount() {\n        const { isSelected } = this.props;\n        if (isSelected) {\n            this.trRef.current.setNode(this.shapeRef.current);\n            this.trRef.current.getLayer().batchDraw();\n        }\n    }\n\n    render(){\n        const { shapeProps, isSelected, onSelect, onChange } = this.props;\n        this.shapeRef = createRef();\n        this.trRef = createRef();\n        console.log(\"shapeRef\",this.shapeRef)\n        console.log(\"trRef\",this.trRef)\n        return <React.Fragment>\n            <Rect\n                onClick={onSelect}\n                ref={this.shapeRef}\n                {...shapeProps}\n                draggable\n                onDragEnd={e => {\n                    onChange({\n                        ...shapeProps,\n                        x: e.target.x(),\n                        y: e.target.y()\n                    });\n                }}\n                onTransformEnd={e => {\n                    // transformer is changing scale of the node\n                    // and NOT its width or height\n                    // but in the store we have only width and height\n                    // to match the data better we will reset scale on transform end\n                    const node = this.shapeRef.current;\n                    const scaleX = node.scaleX();\n                    const scaleY = node.scaleY();\n\n                    // we will reset it back\n                    node.scaleX(1);\n                    node.scaleY(1);\n                    onChange({\n                        ...shapeProps,\n                        x: node.x(),\n                        y: node.y(),\n                        // set minimal value\n                        width: Math.max(5, node.width() * scaleX),\n                        height: Math.max(node.height() * scaleY)\n                    });\n                }}\n            />\n            {isSelected && <Transformer ref={this.trRef} />}\n        </React.Fragment>\n    }\n}\n","import React, {PureComponent} from \"react\";\nimport {Menu, Icon} from \"semantic-ui-react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRaspberryPi } from '@fortawesome/free-brands-svg-icons'\n\nexport class Tools extends PureComponent{\n    state = {\n        uploading: false,\n    };\n    fileInput = React.createRef();\n\n    onChange = e => {\n        const {isReadyToSaveHaveHandler} = this.props;\n        if(e.target.files.length===1) {\n            const {changeImage} = this.props;\n            this.setState({uploading: true});\n            const fileURL = URL.createObjectURL(e.target.files[0]);\n            fetch(fileURL, {\n                method: 'GET'\n            })\n                .then(response => response.blob())\n                .then(blob => {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onload = () => {\n                        changeImage(fileURL, reader.result).then(() => {\n                            this.setState({uploading: false})\n                            isReadyToSaveHaveHandler(true)\n                        });\n                    };\n                });\n        }\n\n        // Send it to back end to keep it.\n\n        e.preventDefault();\n\n    };\n\n    imageUpload = () => {\n        this.fileInput.current.click();\n    };\n\n    render(){\n        const { showImageHandler, selectedTool, selectTool, saveShape } = this.props;\n        return <Menu icon style={{border:'0px'}}>\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='Tools'\n                       content='Tools'\n            />\n            <Menu.Item\n                style={selectedTool === 'polygon' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='polygon'\n                content=''\n                icon='gem'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'rectangle' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='rectangle'\n                content=''\n                icon='square full'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'circle' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='circle'\n                content=''\n                icon='circle'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'raspberry' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='raspberry'\n                content=''\n                onClick={selectTool}\n            >\n                <FontAwesomeIcon icon={faRaspberryPi} />\n            </Menu.Item>\n            {\n                selectedTool==='polygon' ?\n                    <Menu.Item style={{backgroundColor: '#fff', color: '#4d3a5b'}}\n                               name='undo'\n                               content=''\n                               icon='undo'\n                               onClick={this.handleUndo}\n                    /> : null\n            }\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='refresh'\n                       content=''\n                       icon='refresh'\n                       onClick={this.handleClear}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='image'\n                       content=''\n                       icon='image'\n                       onClick={showImageHandler}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='save'\n                       content=''\n                       icon='save'\n                       onClick={saveShape}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='upload'\n                       content=''\n                       onClick={this.imageUpload}\n            >\n                <Icon name='upload' />\n                <input type='file' id='single' ref={this.fileInput} onChange={this.onChange} hidden />\n            </Menu.Item>\n        </Menu>\n    }\n}\n","import {PureComponent} from \"react\";\nimport Konva from 'konva';\n\nexport class Canvas extends PureComponent{\n    constructor(props){\n        super(props);\n        this.state = {\n            stage: null,\n            layer:null,\n            shapes:[]\n        }\n    }\n\n    componentDidMount() {\n        const { shapes } = this.props;\n        const stage = new Konva.Stage({\n            width: window.innerWidth,\n            height: window.innerHeight-40,\n            container: '#containerForStage',\n            visible: true\n        });\n        const layer = new Konva.Layer({});\n        stage.add(layer);\n        stage.on('mouseup', this.mouseUpHandler);\n        stage.on('mousemove', this.mouseMoveHandler);\n        this.setState({ stage, layer, shapes });\n    }\n\n    drawShapes = async () => {\n        const { layer } = this.state;\n        const { shapes, showImage, image } = this.props;\n        if(layer!==null){\n            await layer.destroyChildren();\n            if(showImage && image) {\n                await Konva.Image.fromURL(image, async function (image) {\n                    await layer.add(image);\n                    image.zIndex(0);\n                    await layer.draw();\n                });\n            }\n            for(const s of shapes){\n                if(s.type==='polygon'){\n                    layer.add(new Konva.Line({\n                        points: s.shape,\n                        stroke: 'yellow',\n                        fill: 'yellow',\n                        closed: true,\n                        draggable:true\n                    }));\n                }else if(s.type==='rectangle'){\n                    layer.add(new Konva.Rect({\n                        ...s.shape,\n                        stroke: 'yellow',\n                        fill: 'yellow',\n                    }));\n                }else if(s.type==='circle'){\n                    layer.add(new Konva.Ring({\n                        ...s.shape,\n                        stroke: 'yellow',\n                        fill: 'yellow'\n                    }));\n                }else if(s.type==='raspberry'){\n                    layer.add(new Konva.Path({\n                        ...s.shape,\n                        fill: 'yellow',\n                        scaleX: 0.05,\n                        scaleY: 0.05\n                    }));\n                }\n            }\n            layer.draw();\n            const xxx = layer.findOne('#xxx');\n            if(xxx!==undefined) xxx.destroy();\n            this.point=null;\n            this.line=null;\n        }\n    };\n\n    point=null;\n    line=null;\n\n    circleDrawHandler = e => {\n        const {layer} = this.state;\n        const point = layer.findOne('#xxx');\n        if(point===undefined){\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                x: e.evt.layerX,\n                y: e.evt.layerY,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }else{\n            point.setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n        }\n        const circle = layer.findOne('#circle');\n        if(circle!==undefined){\n            console.log(e.evt.layerX,circle.attrs.x,'.',e.evt.layerY,circle.attrs.y,Math.sqrt(\n                Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                Math.pow(e.evt.layerY-circle.attrs.y,2)\n            ),circle);\n            circle.setAttrs({innerRadius:Math.sqrt(\n                    Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                    Math.pow(e.evt.layerY-circle.attrs.y,2)\n                )});\n        }\n        layer.draw();\n    };\n\n    rectangleDrawHandler = e => {\n        const {layer} = this.state;\n        // console.log(this.point,this.line,this.polygon)\n        if(layer.findOne('#xxx')!==undefined){\n            layer.findOne('#xxx').setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n            if(layer.findOne('#rectangle')!==undefined) {\n                layer.findOne('#rectangle').setAttrs({\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y\n                });\n            }else if(\n                this.rectangle.x!==undefined &&\n                this.rectangle.y!==undefined\n            ){\n                const rectangle = new Konva.Rect({\n                    id: 'rectangle',\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y,\n                    stroke:'red'\n                });\n                layer.add(rectangle);\n            }\n        }else{\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                ...this.point,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }\n        layer.draw();\n    };\n\n    polygonDrawHandler = e => {\n        const {layer} = this.state;\n        // console.log(this.point,this.line,this.polygon)\n        if(this.point===null) {\n            this.point = {x: e.evt.layerX, y: e.evt.layerY};\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                ...this.point,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }\n        if(this.line===null && this.polygon.length>0){\n            this.line=[\n                this.polygon[this.polygon.length - 2],\n                this.polygon[this.polygon.length - 1],\n                e.evt.layerX,\n                e.evt.layerY\n            ];\n            const line = new Konva.Line({\n                id: 'xxy',\n                points: [\n                    this.polygon[this.polygon.length - 2],\n                    this.polygon[this.polygon.length - 1],\n                    e.evt.layerX,\n                    e.evt.layerY\n                ],\n                stroke: 'red',\n            });\n\n            layer.add(line);\n        }\n        if(layer.findOne('#xxx')!==undefined)\n            layer.findOne('#xxx').setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n        if(this.polygon.length>0){\n            if(layer.findOne('#xxy')!==undefined)\n                layer.findOne('#xxy').setAttrs({points:[this.point.x,this.point.y,e.evt.layerX,e.evt.layerY]});\n        }\n        layer.draw();\n    };\n\n    raspberryDrawHandler = e => {\n        const {layer} = this.state;\n        const xxx = layer.findOne('#raspberry');\n        if(xxx){\n            xxx.setAttrs({\n                id:\"raspberry\",\n                x: e.evt.layerX-10,\n                y: e.evt.layerY-10,\n                data: 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z',\n                fill: 'red',\n                scaleX: 0.05,\n                scaleY: 0.05\n            });\n            layer.draw();\n        }else{\n            const raspBerry = new Konva.Path({\n                id:\"raspberry\",\n                x: e.evt.layerX-10,\n                y: e.evt.layerY-10,\n                data: 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z',\n                fill: 'red',\n                scaleX: 0.05,\n                scaleY: 0.05\n            });\n            layer.add(raspBerry);\n            layer.draw();\n        }\n    };\n\n    mouseMoveHandler = e => {\n        const {selectedTool} = this.props;\n        if(selectedTool==='polygon') {\n            this.polygonDrawHandler(e);\n        }else if(selectedTool==='rectangle'){\n            this.rectangleDrawHandler(e);\n        }else if(selectedTool==='circle'){\n            this.circleDrawHandler(e);\n        }else if(selectedTool==='raspberry'){\n            console.log(e)\n            this.raspberryDrawHandler(e);\n        }\n    };\n\n    rectangle = {};\n    polygon = [];\n    oldTarget=null;\n    mouseUpHandler = e => {\n        this.line=null;\n        const {layer} = this.state;\n        const { isReadyToSaveHaveHandler, selectedTool, changeShape } = this.props;\n        if(selectedTool === null) {\n            return;\n        }else if(selectedTool==='select'){\n            if(this.oldTarget!==null && this.oldTarget!==undefined){\n                if(e.target._id===this.oldTarget._id) return;\n                this.oldTarget.setAttrs({\n                    stroke:'yellow'\n                });\n            }\n            this.oldTarget=e.target;\n            e.target.setAttrs({\n                stroke:'red',\n            });\n            const tr = new Konva.Transformer();\n            layer.add(tr);\n            tr.attachTo(e.target);\n            e.target.on('transform', function() {\n                console.log(e.target.parent,tr.parent);\n            });\n            layer.draw();\n            return;\n        }\n        const point = new Konva.Ring({\n            x:e.evt.layerX,\n            y:e.evt.layerY,\n            outerRadius: 0,\n            innerRadius: 5,\n            fill: 'red',\n            stroke: 'black',\n            strokeWidth: 0\n        });\n        if(selectedTool === 'polygon') {\n            this.point={x:e.evt.layerX,y:e.evt.layerY};\n            if (this.polygon.length > 1){\n                if(\n                    this.polygon[0]>=e.evt.layerX-5 &&\n                    this.polygon[0]<=e.evt.layerX+5 &&\n                    this.polygon[1]>=e.evt.layerY-5 &&\n                    this.polygon[1]<=e.evt.layerY+5\n                ){\n                    const line = new Konva.Line({\n                        points: [\n                            this.polygon[this.polygon.length - 2],\n                            this.polygon[this.polygon.length - 1],\n                            this.polygon[0],\n                            this.polygon[1]\n                        ],\n                        stroke: 'red',\n                    });\n                    layer.add(line);\n                    point.setAttrs({x:this.polygon[0], y:this.polygon[1]});\n                    changeShape([...this.polygon,this.polygon[0],this.polygon[1]]);\n                    this.point=null;\n                    this.line=null;\n                    this.polygon=[];\n                    layer.findOne('#xxy').destroy();\n                    isReadyToSaveHaveHandler(true);\n                }else{\n                    const line = new Konva.Line({\n                        points: [\n                            this.polygon[this.polygon.length - 2],\n                            this.polygon[this.polygon.length - 1],\n                            e.evt.layerX,\n                            e.evt.layerY\n                        ],\n                        stroke: 'red',\n                    });\n                    layer.add(line);\n                    this.polygon.push(e.evt.layerX,e.evt.layerY);\n                }\n            }else{\n                this.polygon.push(e.evt.layerX,e.evt.layerY);\n            }\n        }else if(selectedTool==='rectangle'){\n            if(this.rectangle.x===undefined || this.rectangle.y===undefined){\n                this.rectangle = {x: e.evt.layerX, y: e.evt.layerY};\n                console.log(this.rectangle)\n            }else{\n                const rectangle = new Konva.Rect({\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y,\n                    stroke:'red'\n                });\n                layer.add(rectangle);\n                changeShape({\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y\n                });\n                this.point=null;\n                this.rectangle={};\n                layer.findOne('#rectangle').destroy();\n                isReadyToSaveHaveHandler(true);\n            }\n        }else if(selectedTool==='circle'){\n            const circle = layer.findOne('#circle');\n            if(circle === undefined){\n                const addCircle = new Konva.Ring({\n                    id:'circle',\n                    x:e.evt.layerX,\n                    y:e.evt.layerY,\n                    outerRadius: 0,\n                    innerRadius: 5,\n                    stroke: 'red'\n                });\n                layer.add(addCircle);\n            }else{\n                const addCircle = new Konva.Ring({\n                    x: circle.attrs.x,\n                    y: circle.attrs.y,\n                    outerRadius: 0,\n                    innerRadius: Math.sqrt(\n                        Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                        Math.pow(e.evt.layerY-circle.attrs.y,2)\n                    ),\n                    stroke: 'red'\n                });\n                layer.add(addCircle);\n                changeShape({\n                    x: circle.attrs.x,\n                    y: circle.attrs.y,\n                    innerRadius: Math.sqrt(\n                        Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                        Math.pow(e.evt.layerY-circle.attrs.y,2)\n                    ),\n                });\n                this.point=null;\n                this.rectangle={};\n                layer.findOne('#circle').destroy();\n                isReadyToSaveHaveHandler(true);\n            }\n        }else if(selectedTool==='raspberry'){\n            if(layer.findOne('#raspberry')){\n                layer.findOne('#raspberry').destroy();\n            }\n            const raspBerry = new Konva.Path({\n                x: e.evt.layerX-10,\n                y: e.evt.layerY-10,\n                data: 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z',\n                fill: 'red',\n                scaleX: 0.05,\n                scaleY: 0.05\n            });\n            layer.add(raspBerry);\n            changeShape({\n                x: e.evt.layerX-10,\n                y: e.evt.layerY-10,\n                data: 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z',\n            });\n            isReadyToSaveHaveHandler(true);\n        }\n        layer.add(point);\n        layer.draw()\n    };\n\n    render(){\n        console.log(\"rendering....\", this.props);\n        this.drawShapes();\n        return null;\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { Tools } from \"./components\";\nimport { Canvas } from \"./components\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends PureComponent {\n    constructor(props){\n        super(props);\n        this.state={\n            selectedTool:null,\n            isReadyToSave:false,\n            shapes:[],\n            image: null,\n            showImage:true,\n            base64image: null\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            selectedTool: null,\n            isReadyToSave:false,\n        });\n    }\n\n    isReadyToSaveHaveHandler = (state) => {\n        this.setState({isReadyToSave: state});\n    };\n\n    selectTool = (e, { name }) => {\n        this.setState({selectedTool: name});\n    };\n\n    changeImage = (image, base64image) => {\n        return new Promise(resolve => {\n            this.setState({image, base64image});\n            resolve(image);\n        });\n    };\n\n    shape = {};\n    changeShape = (shape) => {\n        console.log(\"shape\", shape);\n        this.shape = shape;\n    };\n\n    saveShape = () => {\n        const { isReadyToSave, shapes, selectedTool, image } = this.state;\n        if(isReadyToSave){\n            const data = new FormData();\n            const csrf_token = document.getElementById('csrf_token').value;\n            data.append('csrf_token', csrf_token);\n            data.append('shapes', shapes);\n            if(image!==null){\n                data.append('file', image);\n            }\n\n            fetch('http://localhost:5000/upload', {\n                method: 'POST',\n                body: data,\n            }).then((response) => {\n                response.json().then((body) => {\n                    this.setState({\n                        imageURL: `http://localhost:5000/${body.file}`,\n                        shapes:[...shapes, {type:selectedTool, shape:this.shape}]\n                    });\n                });\n            }).catch((err) => {\n                if(image!==null) {\n                    alert(\"can not be uploaded\");\n                }\n                this.setState({\n                    shapes:[...shapes, {type:selectedTool, shape:this.shape}]\n                });\n            });\n        }else{\n            alert(\"not ready to save\");\n        }\n    };\n\n    showImageHandler = () => {\n        const { showImage } = this.state;\n        this.setState({showImage:!showImage});\n    };\n\n    render() {\n        const { selectedTool, shapes, image, showImage } = this.state;\n        ReactDOM.render(\n            <Tools\n                isReadyToSaveHaveHandler={this.isReadyToSaveHaveHandler}\n                showImageHandler={this.showImageHandler}\n                selectTool={this.selectTool}\n                saveShape={this.saveShape}\n                selectedTool={selectedTool}\n                changeImage={this.changeImage}\n            />, document.getElementById('tools'));\n        ReactDOM.render(\n            <Canvas\n                isReadyToSaveHaveHandler={this.isReadyToSaveHaveHandler}\n                changeShape={this.changeShape}\n                selectedTool={selectedTool}\n                shapes={shapes}\n                image={image}\n                showImage={showImage}\n            />, document.getElementById('containerForStage'));\n        return null;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}