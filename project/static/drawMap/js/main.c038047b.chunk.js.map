{"version":3,"sources":["components/rectangle.js","components/tools.js","components/kanvas.js","App.js","serviceWorker.js","index.js"],"names":["Component","Tools","state","uploading","inputValues","name","email","password","addUserOpened","isError","users","fileInput","React","createRef","onChange","e","isReadyToSaveHaveHandler","props","target","files","length","changeImage","setState","filename","fileURL","URL","createObjectURL","fetch","method","then","response","blob","reader","FileReader","readAsDataURL","onload","result","preventDefault","imageUpload","current","click","addUser","a","async","validator","isEmail","document","getElementById","value","csrf_token","data","FormData","append","body","res","json","undefined","err","alert","new_user","id","change","nameOfInput","openAddUserModal","closeAddUserModal","this","prevProps","prevState","snapshot","all","getElementsByClassName","console","log","style","fontSize","showImageHandler","selectedTool","selectTool","saveShape","selectUser","selectedUser","Menu","icon","border","Item","backgroundColor","color","content","onClick","faRaspberryPi","Dropdown","item","text","JSON","stringify","Modal","trigger","open","onClose","Header","Content","Description","Form","Group","widths","Input","fluid","label","placeholder","autoComplete","Field","control","error","pointing","type","Button","map","u","userId","handleUndo","handleClear","Icon","ref","hidden","PureComponent","raspberry_data","Canvas","drawShapes","layer","shapes","showImage","image","destroyChildren","Konva","Image","fromURL","add","zIndex","draw","s","isSaved","Line","points","shape","stroke","fill","closed","draggable","opacity","Rect","Ring","Path","scaleX","scaleY","xxx","findOne","destroy","point","line","circleDrawHandler","ring","x","evt","layerX","y","layerY","outerRadius","innerRadius","strokeWidth","setAttrs","circle","attrs","Math","sqrt","pow","rectangleDrawHandler","width","rectangle","height","polygonDrawHandler","polygon","raspberryDrawHandler","raspBerry","mouseMoveHandler","oldTarget","mouseUpHandler","deviceLimit","changeShape","removeShape","_id","tr","Transformer","attachTo","on","parent","push","addCircle","filter","stage","Stage","window","innerWidth","innerHeight","container","visible","Layer","App","isReadyToSave","base64image","Promise","resolve","shapesApproved","imageURL","file","catch","parse","getAttribute","split","join","ReactDOM","render","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c038047b.chunk.js","sourcesContent":["import {Rect, Transformer} from \"react-konva\";\nimport React, {Component,createRef} from \"react\";\n\nexport class Rectangle extends Component{\n    componentDidMount() {\n        const { isSelected } = this.props;\n        if (isSelected) {\n            this.trRef.current.setNode(this.shapeRef.current);\n            this.trRef.current.getLayer().batchDraw();\n        }\n    }\n\n    render(){\n        const { shapeProps, isSelected, onSelect, onChange } = this.props;\n        this.shapeRef = createRef();\n        this.trRef = createRef();\n        console.log(\"shapeRef\",this.shapeRef)\n        console.log(\"trRef\",this.trRef)\n        return <React.Fragment>\n            <Rect\n                onClick={onSelect}\n                ref={this.shapeRef}\n                {...shapeProps}\n                draggable\n                onDragEnd={e => {\n                    onChange({\n                        ...shapeProps,\n                        x: e.target.x(),\n                        y: e.target.y()\n                    });\n                }}\n                onTransformEnd={e => {\n                    // transformer is changing scale of the node\n                    // and NOT its width or height\n                    // but in the store we have only width and height\n                    // to match the data better we will reset scale on transform end\n                    const node = this.shapeRef.current;\n                    const scaleX = node.scaleX();\n                    const scaleY = node.scaleY();\n\n                    // we will reset it back\n                    node.scaleX(1);\n                    node.scaleY(1);\n                    onChange({\n                        ...shapeProps,\n                        x: node.x(),\n                        y: node.y(),\n                        // set minimal value\n                        width: Math.max(5, node.width() * scaleX),\n                        height: Math.max(node.height() * scaleY)\n                    });\n                }}\n            />\n            {isSelected && <Transformer ref={this.trRef} />}\n        </React.Fragment>\n    }\n}\n","import React, {PureComponent} from \"react\";\nimport {Menu, Icon, Dropdown, Form, Modal} from \"semantic-ui-react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRaspberryPi } from '@fortawesome/free-brands-svg-icons';\nimport validator from 'validator';\n\nexport class Tools extends PureComponent{\n    state = {\n        uploading: false,\n        inputValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        },\n        addUserOpened: false,\n        isError: false,\n        users :[]\n    };\n    fileInput = React.createRef();\n\n    async componentDidMount() {\n        const users = this.props;\n        this.setState({users, addUserOpened: false});\n    }\n\n    onChange = e => {\n        const {isReadyToSaveHaveHandler} = this.props;\n        if(e.target.files.length===1) {\n            const {changeImage} = this.props;\n            this.setState({uploading: true});\n            const filename = e.target.files[0].name;\n            const fileURL = URL.createObjectURL(e.target.files[0]);\n            fetch(fileURL, {\n                method: 'GET'\n            })\n                .then(response => response.blob())\n                .then(blob => {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onload = () => {\n                        changeImage(fileURL, reader.result, filename).then(() => {\n                            this.setState({uploading: false})\n                            isReadyToSaveHaveHandler(true)\n                        });\n                    };\n                });\n        }\n\n        // Send it to back end to keep it.\n\n        e.preventDefault();\n\n    };\n\n    imageUpload = () => {\n        this.fileInput.current.click();\n    };\n\n    addUser = async () => {\n        const {addUser} = this.props;\n        const {email, name, password} = this.state.inputValues;\n        if(!validator.isEmail(email)){\n            this.setState({isError: true});\n            return;\n        }\n        const csrf_token = await document.getElementById('csrf_token').value;\n        const data = new FormData();\n        data.append('email', email);\n        data.append('name', name);\n        data.append('password', password);\n        data.append('csrf_token', csrf_token);\n        fetch('http://localhost:5000/addDeviceFromDrawMap', {\n            method: 'POST',\n            body: data\n        }).then(res => {\n            res.json().then(body => {\n                if(body.err!==undefined){\n                    alert(body.err);\n                }else{\n                    this.setState({addUserOpened: false});\n                    addUser(body.new_user.id,body.new_user.name);\n                }\n            })\n        })\n    };\n\n    change = (nameOfInput, value) => {\n        const {inputValues} = this.state;\n        if(nameOfInput==='email' && validator.isEmail(value)){\n            this.setState({inputValues: {...inputValues, [nameOfInput]: value}, isError: false});\n        }else{\n            this.setState({inputValues: {...inputValues, [nameOfInput]: value}});\n        }\n    };\n\n    openAddUserModal = () => {\n        this.setState({addUserOpened: true})\n    };\n\n    closeAddUserModal = () => {\n        this.setState({addUserOpened: false})\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {isError} = this.state;\n        if(isError){\n            const all = document.getElementsByClassName('error');\n            console.log(\"all: \", all);\n            for (const a of all) {\n              a.style.fontSize = 'inherit';\n            }\n        }\n    }\n\n    render(){\n        const { showImageHandler, selectedTool, selectTool, saveShape, selectUser, selectedUser,users } = this.props;\n        const { isError, inputValues, addUserOpened } = this.state;\n        return <Menu icon style={{border:'0px'}}>\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='Tools'\n                       content='Tools'\n            />\n            <Menu.Item\n                style={selectedTool === 'polygon' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='polygon'\n                content=''\n                icon='gem'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'rectangle' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='rectangle'\n                content=''\n                icon='square full'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'circle' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='circle'\n                content=''\n                icon='circle'\n                onClick={selectTool}\n            />\n            <Menu.Item\n                style={selectedTool === 'raspberry' ?\n                    {backgroundColor: '#60a',color: '#fff'} :\n                    {backgroundColor: '#fff',color: '#60a'}\n                }\n                name='raspberry'\n                content=''\n                onClick={selectTool}\n            >\n                <FontAwesomeIcon icon={faRaspberryPi} />\n            </Menu.Item>\n            {\n                selectedTool==='raspberry' ?\n                    <Dropdown item text={JSON.stringify(selectedUser)===\"{}\" ? 'Choose User' : selectedUser.name}>\n                        <Dropdown.Menu>\n                            <Modal\n                                style={{'top':'auto', 'left':'auto', 'height':'auto'}}\n                                trigger={<Dropdown.Item onClick={this.openAddUserModal}>Add Employee</Dropdown.Item>}\n                                open={addUserOpened}\n                                onClose={this.closeAddUserModal}\n                            >\n                                <Modal.Header>Add Employee</Modal.Header>\n                                <Modal.Content>\n                                  <Modal.Description>\n                                      <Form>\n                                        <Form.Group widths='equal'>\n                                          <Form.Input\n                                            fluid label='Name'\n                                            placeholder='Name'\n                                            autoComplete='off'\n                                            value={inputValues.name}\n                                            onChange={(e, {value}) => this.change('name', value)}\n                                          />\n                                          <Form.Field\n                                            id='form-input-control-error-email'\n                                            control={Form.Input}\n                                            label='Email'\n                                            placeholder='example@deepfocuswork.com'\n                                            error = {\n                                              isError ? {\n                                                content: 'Please enter a valid email address',\n                                                pointing: 'above',\n                                              } : null\n                                            }\n                                            autoComplete='off'\n                                            value={inputValues.email}\n                                            onChange={(e, {value}) => this.change('email', value)}\n                                          />\n                                          <Form.Input\n                                            label='Enter Password'\n                                            type='password'\n                                            autoComplete='off'\n                                            value={inputValues.password}\n                                            onChange={(e, {value}) => this.change('password', value)}\n                                          />\n                                          <Form.Button color='green' style={{'margin-top': '23px'}} onClick={this.addUser}>Add</Form.Button>\n                                        </Form.Group>\n                                      </Form>\n                                  </Modal.Description>\n                                </Modal.Content>\n                              </Modal>\n                            {users.map(u => <Dropdown.Item onClick={() => selectUser(u.userId, u.name)}>{u.name}</Dropdown.Item>)}\n                        </Dropdown.Menu>\n                    </Dropdown> : null\n            }\n            {\n                selectedTool==='polygon' ?\n                    <Menu.Item style={{backgroundColor: '#fff', color: '#4d3a5b'}}\n                               name='undo'\n                               content=''\n                               icon='undo'\n                               onClick={this.handleUndo}\n                    /> : null\n            }\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='refresh'\n                       content=''\n                       icon='refresh'\n                       onClick={this.handleClear}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='image'\n                       content=''\n                       icon='image'\n                       onClick={showImageHandler}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='save'\n                       content=''\n                       icon='save'\n                       onClick={saveShape}\n            />\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='upload'\n                       content=''\n                       onClick={this.imageUpload}\n            >\n                <Icon name='upload' />\n                <input type='file' id='single' ref={this.fileInput} onChange={this.onChange} hidden />\n            </Menu.Item>\n        </Menu>\n    }\n}\n","import {PureComponent} from \"react\";\nimport Konva from 'konva';\n\nconst raspberry_data = 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z';\n\nexport class Canvas extends PureComponent{\n    constructor(props){\n        super(props);\n        this.state = {\n            stage: null,\n            layer:null,\n            shapes:[],\n            deviceLimit: 0\n        }\n    }\n\n    async componentDidMount() {\n        const { shapes } = this.props;\n        const deviceLimit = await document.getElementById('deviceLimit').value;\n        const stage = new Konva.Stage({\n            width: window.innerWidth,\n            height: window.innerHeight-40,\n            container: '#containerForStage',\n            visible: true\n        });\n        const layer = new Konva.Layer({});\n        stage.add(layer);\n        stage.on('mouseup', this.mouseUpHandler);\n        stage.on('mousemove', this.mouseMoveHandler);\n        this.setState({ stage, layer, shapes, deviceLimit });\n    }\n\n    drawShapes = async () => {\n        const { layer } = this.state;\n        const { shapes, showImage, image } = this.props;\n        if(layer!==null){\n            await layer.destroyChildren();\n            if(showImage && image) {\n                await Konva.Image.fromURL(image, async function (image) {\n                    await layer.add(image);\n                    image.zIndex(0);\n                    await layer.draw();\n                });\n            }\n            for(const s of shapes){\n                if(s.isSaved===false){\n                    if(s.type==='polygon'){\n                        layer.add(new Konva.Line({\n                            points: s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            closed: true,\n                            draggable:true,\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='rectangle'){\n                        layer.add(new Konva.Rect({\n                            ...s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='circle'){\n                        layer.add(new Konva.Ring({\n                            ...s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='raspberry'){\n                        layer.add(new Konva.Path({\n                            ...s.shape,\n                            fill: 'red',\n                            scaleX: 0.05,\n                            scaleY: 0.05,\n                            data: raspberry_data\n                        }));\n                    }\n                } else {\n                    if (s.type === 'polygon') {\n                        layer.add(new Konva.Line({\n                            points: s.shape,\n                            stroke: 'yellow',\n                            fill: 'yellow',\n                            closed: true,\n                            draggable: true,\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'rectangle') {\n                        layer.add(new Konva.Rect({\n                            ...s.shape,\n                            stroke: 'green',\n                            fill: 'green',\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'circle') {\n                        layer.add(new Konva.Ring({\n                            ...s.shape,\n                            stroke: 'blue',\n                            fill: 'blue',\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'raspberry') {\n                        layer.add(new Konva.Path({\n                            ...s.shape,\n                            fill: 'purple',\n                            scaleX: 0.05,\n                            scaleY: 0.05,\n                            data: raspberry_data\n                        }));\n                    }\n                }\n            }\n            layer.draw();\n            const xxx = layer.findOne('#xxx');\n            if(xxx!==undefined) xxx.destroy();\n            this.point=null;\n            this.line=null;\n        }\n    };\n\n    point=null;\n    line=null;\n\n    circleDrawHandler = e => {\n        const {layer} = this.state;\n        const point = layer.findOne('#xxx');\n        if(point===undefined){\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                x: e.evt.layerX,\n                y: e.evt.layerY,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }else{\n            point.setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n        }\n        const circle = layer.findOne('#circle');\n        if(circle!==undefined){\n            console.log(e.evt.layerX,circle.attrs.x,'.',e.evt.layerY,circle.attrs.y,Math.sqrt(\n                Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                Math.pow(e.evt.layerY-circle.attrs.y,2)\n            ),circle);\n            circle.setAttrs({innerRadius:Math.sqrt(\n                    Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                    Math.pow(e.evt.layerY-circle.attrs.y,2)\n                )});\n        }\n        layer.draw();\n    };\n\n    rectangleDrawHandler = e => {\n        const {layer} = this.state;\n        // console.log(this.point,this.line,this.polygon)\n        if(layer.findOne('#xxx')!==undefined){\n            layer.findOne('#xxx').setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n            if(layer.findOne('#rectangle')!==undefined) {\n                layer.findOne('#rectangle').setAttrs({\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y\n                });\n            }else if(\n                this.rectangle.x!==undefined &&\n                this.rectangle.y!==undefined\n            ){\n                const rectangle = new Konva.Rect({\n                    id: 'rectangle',\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y,\n                    stroke:'red'\n                });\n                layer.add(rectangle);\n            }\n        }else{\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                ...this.point,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }\n        layer.draw();\n    };\n\n    polygonDrawHandler = e => {\n        const {layer} = this.state;\n        // console.log(this.point,this.line,this.polygon)\n        if(this.point===null) {\n            this.point = {x: e.evt.layerX, y: e.evt.layerY};\n            const ring = new Konva.Ring({\n                id: 'xxx',\n                ...this.point,\n                outerRadius: 0,\n                innerRadius: 3,\n                fill: 'red',\n                stroke: 'black',\n                strokeWidth: 0\n            });\n            layer.add(ring);\n        }\n        if(this.line===null && this.polygon.length>0){\n            this.line=[\n                this.polygon[this.polygon.length - 2],\n                this.polygon[this.polygon.length - 1],\n                e.evt.layerX,\n                e.evt.layerY\n            ];\n            const line = new Konva.Line({\n                id: 'xxy',\n                points: [\n                    this.polygon[this.polygon.length - 2],\n                    this.polygon[this.polygon.length - 1],\n                    e.evt.layerX,\n                    e.evt.layerY\n                ],\n                stroke: 'red',\n            });\n\n            layer.add(line);\n        }\n        if(layer.findOne('#xxx')!==undefined)\n            layer.findOne('#xxx').setAttrs({x:e.evt.layerX,y:e.evt.layerY});\n        if(this.polygon.length>0){\n            if(layer.findOne('#xxy')!==undefined)\n                layer.findOne('#xxy').setAttrs({points:[this.point.x,this.point.y,e.evt.layerX,e.evt.layerY]});\n        }\n        layer.draw();\n    };\n\n    raspberryDrawHandler = e => {\n        const {selectedUser} = this.props;\n        const {layer} = this.state;\n        if(selectedUser.userId) {\n            const xxx = layer.findOne(`#raspberry`);\n            if (xxx) {\n                xxx.setAttrs({\n                    id: `raspberry`,\n                    x: e.evt.layerX - 10,\n                    y: e.evt.layerY - 10,\n                    data: raspberry_data,\n                    fill: 'red',\n                    scaleX: 0.05,\n                    scaleY: 0.05\n                });\n                layer.draw();\n            } else {\n                const raspBerry = new Konva.Path({\n                    id: `raspberry`,\n                    x: e.evt.layerX - 10,\n                    y: e.evt.layerY - 10,\n                    data: raspberry_data,\n                    fill: 'red',\n                    scaleX: 0.05,\n                    scaleY: 0.05\n                });\n                console.log(raspBerry)\n                layer.add(raspBerry);\n                layer.draw();\n            }\n        }\n    };\n\n    mouseMoveHandler = e => {\n        const {selectedTool} = this.props;\n        if(selectedTool==='polygon') {\n            this.polygonDrawHandler(e);\n        }else if(selectedTool==='rectangle'){\n            this.rectangleDrawHandler(e);\n        }else if(selectedTool==='circle'){\n            this.circleDrawHandler(e);\n        }else if(selectedTool==='raspberry'){\n            this.raspberryDrawHandler(e);\n        }\n    };\n\n    rectangle = {};\n    polygon = [];\n    oldTarget=null;\n    mouseUpHandler = e => {\n        this.line=null;\n        const { layer, deviceLimit } = this.state;\n        const { isReadyToSaveHaveHandler, selectedTool, changeShape, shapes, selectedUser, removeShape } = this.props;\n        if(selectedTool === null) {\n            return;\n        }else if(selectedTool==='select'){\n            if(this.oldTarget!==null && this.oldTarget!==undefined){\n                if(e.target._id===this.oldTarget._id) return;\n                this.oldTarget.setAttrs({\n                    stroke:'yellow'\n                });\n            }\n            this.oldTarget=e.target;\n            e.target.setAttrs({\n                stroke:'red'\n            });\n            const tr = new Konva.Transformer();\n            layer.add(tr);\n            tr.attachTo(e.target);\n            e.target.on('transform', function() {\n                console.log(e.target.parent,tr.parent);\n            });\n            layer.draw();\n            return;\n        }\n        const point = new Konva.Ring({\n            x:e.evt.layerX,\n            y:e.evt.layerY,\n            outerRadius: 0,\n            innerRadius: 5,\n            fill: 'red',\n            stroke: 'black',\n            strokeWidth: 0\n        });\n        if(selectedTool === 'polygon') {\n            this.point={x:e.evt.layerX,y:e.evt.layerY};\n            if (this.polygon.length > 1){\n                if(\n                    this.polygon[0]>=e.evt.layerX-5 &&\n                    this.polygon[0]<=e.evt.layerX+5 &&\n                    this.polygon[1]>=e.evt.layerY-5 &&\n                    this.polygon[1]<=e.evt.layerY+5\n                ){\n                    const line = new Konva.Line({\n                        points: [\n                            this.polygon[this.polygon.length - 2],\n                            this.polygon[this.polygon.length - 1],\n                            this.polygon[0],\n                            this.polygon[1]\n                        ],\n                        stroke: 'red',\n                    });\n                    layer.add(line);\n                    point.setAttrs({x:this.polygon[0], y:this.polygon[1]});\n                    changeShape([...this.polygon,this.polygon[0],this.polygon[1]]);\n                    this.point=null;\n                    this.line=null;\n                    this.polygon=[];\n                    //layer.findOne('#xxy').destroy();\n                    isReadyToSaveHaveHandler(true);\n                }else{\n                    const line = new Konva.Line({\n                        points: [\n                            this.polygon[this.polygon.length - 2],\n                            this.polygon[this.polygon.length - 1],\n                            e.evt.layerX,\n                            e.evt.layerY\n                        ],\n                        stroke: 'red',\n                    });\n                    layer.add(line);\n                    this.polygon.push(e.evt.layerX,e.evt.layerY);\n                }\n            }else{\n                this.polygon.push(e.evt.layerX,e.evt.layerY);\n            }\n        }else if(selectedTool==='rectangle'){\n            if(this.rectangle.x===undefined || this.rectangle.y===undefined){\n                this.rectangle = {x: e.evt.layerX, y: e.evt.layerY};\n                console.log(this.rectangle)\n            }else{\n                const rectangle = new Konva.Rect({\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y,\n                    stroke:'red'\n                });\n                layer.add(rectangle);\n                changeShape({\n                    x: this.rectangle.x,\n                    y: this.rectangle.y,\n                    width: e.evt.layerX - this.rectangle.x,\n                    height: e.evt.layerY - this.rectangle.y\n                });\n                this.point=null;\n                this.rectangle={};\n                //layer.findOne('#rectangle').destroy();\n                isReadyToSaveHaveHandler(true);\n            }\n        }else if(selectedTool==='circle'){\n            const circle = layer.findOne('#circle');\n            if(circle === undefined){\n                const addCircle = new Konva.Ring({\n                    id:'circle',\n                    x:e.evt.layerX,\n                    y:e.evt.layerY,\n                    outerRadius: 0,\n                    innerRadius: 5,\n                    stroke: 'red'\n                });\n                layer.add(addCircle);\n            }else{\n                const addCircle = new Konva.Ring({\n                    x: circle.attrs.x,\n                    y: circle.attrs.y,\n                    outerRadius: 0,\n                    innerRadius: Math.sqrt(\n                        Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                        Math.pow(e.evt.layerY-circle.attrs.y,2)\n                    ),\n                    stroke: 'red'\n                });\n                layer.add(addCircle);\n                changeShape({\n                    x: circle.attrs.x,\n                    y: circle.attrs.y,\n                    innerRadius: Math.sqrt(\n                        Math.pow(e.evt.layerX-circle.attrs.x,2) +\n                        Math.pow(e.evt.layerY-circle.attrs.y,2)\n                    ),\n                });\n                this.point=null;\n                this.rectangle={};\n                //layer.findOne('#circle').destroy();\n                isReadyToSaveHaveHandler(true);\n            }\n        }else if(selectedTool==='raspberry'){\n            if(selectedUser.userId===undefined){\n                return;\n            }\n            if(shapes.filter(s => s.type==='raspberry').length >= deviceLimit){\n                return;\n            }\n            changeShape({\n                x: e.evt.layerX-10,\n                y: e.evt.layerY-10,\n                // data: raspberry_data,\n            });\n            isReadyToSaveHaveHandler(true);\n        }\n        layer.add(point);\n        layer.draw()\n    };\n\n    render(){\n        console.log(\"rendering....\", this.props);\n        this.drawShapes();\n        return null;\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { Tools } from \"./components\";\nimport { Canvas } from \"./components\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends PureComponent {\n    constructor(props){\n        super(props);\n        this.state={\n            selectedTool:null,\n            isReadyToSave:false,\n            shapes:[],\n            image: null,\n            showImage:true,\n            base64image: null,\n            filename: null,\n            selectedUser: {}\n        }\n    }\n\n    componentDidMount() {\n        const shapes= JSON.parse(document.getElementById('containerForStage').getAttribute('shapes').split(\"'\").join('\"'));\n        const image= document.getElementById('containerForStage').getAttribute('image');\n        let users = document.getElementById('users').value;\n        users = JSON.parse(users.split(\"'\").join('\"'));\n        this.setState({\n            selectedTool: null,\n            isReadyToSave: false,\n            users,\n            image,\n            shapes\n        });\n    }\n\n    isReadyToSaveHaveHandler = (state) => {\n        this.setState({isReadyToSave: state});\n    };\n\n    selectTool = (e, { name }) => {\n        this.setState({selectedTool: name});\n    };\n\n    changeImage = (image, base64image, filename) => {\n        return new Promise(resolve => {\n            this.setState({image, base64image, filename});\n            resolve(image);\n        });\n    };\n\n    shape = [];\n    changeShape = (shape) => {\n        const {selectedTool, shapes, selectedUser} = this.state;\n        console.log(\"shape\", shapes, this.state);\n        if(selectedTool==='raspberry') {\n            this.setState({\n                shapes: [...shapes.filter(s => s.type!=='raspberry' || (s.type===selectedTool && s.id!==selectedUser.userId)), {\n                    id: selectedUser.userId,\n                    type: selectedTool,\n                    isSaved: false,\n                    shape\n                }]\n            });\n        }else{\n            this.setState({\n                shapes: [...shapes, {\n                    type: selectedTool,\n                    isSaved: false,\n                    shape\n                }]\n            });\n        }\n    };\n\n    saveShape = async () => {\n        const { isReadyToSave, shapes, image, base64image, filename } = this.state;\n        if(isReadyToSave){\n            const csrf_token = await document.getElementById('csrf_token').value;\n            const shapesApproved = shapes.map(s=>{return {...s, isSaved:true};});\n            const data = new FormData();\n            data.append('csrf_token', csrf_token);\n            data.append('shapes', JSON.stringify(shapesApproved));\n            if(image!==null){\n                data.append('doesImageExist', 'true');\n                data.append('filename', filename);\n                data.append('base64image', base64image);\n            }else{\n                data.append('doesImageExist', 'false');\n            }\n            fetch('http://localhost:5000/upload', {\n                method: 'POST',\n                body: data\n            }).then((response) => {\n                response.json().then((body) => {\n                    this.setState({\n                        imageURL: `http://localhost:5000/${body.file}`,\n                        shapes:[...shapesApproved]\n                    });\n                });\n            }).catch((err) => {\n                if(image!==null) {\n                    alert(`can not be uploaded:( ${err} )`);\n                }\n            });\n        }else{\n            alert(\"not ready to save\");\n        }\n    };\n\n    showImageHandler = () => {\n        const { showImage } = this.state;\n        this.setState({showImage:!showImage});\n    };\n\n    selectUser = (userId, name) => {\n        this.setState({selectedUser: {userId, name}})\n    };\n\n    addUser = (userId, name) => {\n        const {users} = this.state;\n        this.setState({users: [...users,{userId,name}]})\n    };\n\n    render() {\n        const { selectedTool, shapes, image, showImage, selectedUser,users } = this.state;\n        ReactDOM.render(\n            <Tools\n                isReadyToSaveHaveHandler={this.isReadyToSaveHaveHandler}\n                showImageHandler={this.showImageHandler}\n                selectTool={this.selectTool}\n                selectedTool={selectedTool}\n                saveShape={this.saveShape}\n                changeImage={this.changeImage}\n                addUser={this.addUser}\n                selectUser={this.selectUser}\n                selectedUser={selectedUser}\n                users={users}\n            />, document.getElementById('tools'));\n        ReactDOM.render(\n            <Canvas\n                isReadyToSaveHaveHandler={this.isReadyToSaveHaveHandler}\n                changeShape={this.changeShape}\n                selectedTool={selectedTool}\n                shapes={shapes}\n                image={image}\n                showImage={showImage}\n                selectedUser={selectedUser}\n                removeShape={this.removeShape}\n            />, document.getElementById('containerForStage'));\n        return null;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}