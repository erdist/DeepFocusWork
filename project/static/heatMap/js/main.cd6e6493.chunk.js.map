{"version":3,"sources":["components/kanvas.js","components/tools.js","App.js","serviceWorker.js","index.js"],"names":["raspberry_data","Canvas","props","drawShapes","a","layer","state","shapes","image","updateHeatMap","destroyChildren","Konva","Image","fromURL","add","zIndex","draw","s","isSaved","type","Line","points","shape","stroke","fill","closed","draggable","opacity","Rect","Ring","Path","data","scaleX","scaleY","id","x","y","outerRadius","innerRadius","undefined","xxx","findOne","destroy","point","line","raspberryPiToUpdate","hm","deviceID","setAttrs","getAttr","stage","deviceLimit","this","Stage","width","window","innerWidth","height","innerHeight","container","visible","Layer","setState","nextProps","updateHeatMapCount","Component","Tools","changeFilter","changeMainFilter","selectedMainFilter","inputRangeProps","filterValue","minDate","Date","min","maxDate","max","Menu","icon","style","border","Item","backgroundColor","color","name","content","Dropdown","item","text","onClick","getTime","getTimezoneOffset","toLocaleString","minValue","maxValue","formatLabel","value","onChange","PureComponent","App","allData","fetch","method","then","res","json","results","tempFilter","minMax","filterRange","selectedTool","isReadyToSave","showImage","base64image","filename","updateInterval","parseInt","document","getElementById","getAttribute","setInterval","filteredUpdateHeatMap","filter","h","date","ReactDOM","render","JSON","parse","split","join","length","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd6e6493.chunk.js","sourcesContent":["import {Component} from \"react\";\nimport Konva from 'konva';\n\nconst raspberry_data = 'M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z';\n\nexport class Canvas extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            stage: null,\n            layer:null,\n            shapes:[],\n            deviceLimit: 0,\n        }\n    }\n\n    async componentDidMount() {\n        const { shapes } = this.props;\n        const stage = new Konva.Stage({\n            width: window.innerWidth,\n            height: window.innerHeight-40,\n            container: '#containerForStage',\n            visible: true\n        });\n        const layer = new Konva.Layer({});\n        stage.add(layer);\n        this.setState({ stage, layer, shapes });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {stage, layer} = this.state;\n        if(stage!==null || layer!==null) {\n            return nextProps.updateHeatMapCount !== this.props.updateHeatMapCount;\n        }else{\n            return true;\n        }\n    }\n\n    drawShapes = async () => {\n        const { layer } = this.state;\n        const { shapes, image, updateHeatMap } = this.props;\n        if(layer!==null){\n            await layer.destroyChildren();\n            if(image) {\n                await Konva.Image.fromURL(image, async function (image) {\n                    await layer.add(image);\n                    image.zIndex(0);\n                    await layer.draw();\n                });\n            }\n            for(const s of shapes){\n                if(s.isSaved===false){\n                    if(s.type==='polygon'){\n                        layer.add(new Konva.Line({\n                            points: s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            closed: true,\n                            draggable:true,\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='rectangle'){\n                        layer.add(new Konva.Rect({\n                            ...s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='circle'){\n                        layer.add(new Konva.Ring({\n                            ...s.shape,\n                            stroke: 'red',\n                            fill: 'red',\n                            opacity: 0.6\n                        }));\n                    }else if(s.type==='raspberry'){\n                        layer.add(new Konva.Path({\n                            ...s.shape,\n                            data: raspberry_data,\n                            fill: 'red',\n                            scaleX: 0.05,\n                            scaleY: 0.05\n                        }));\n                    }\n                } else {\n                    if (s.type === 'polygon') {\n                        layer.add(new Konva.Line({\n                            points: s.shape,\n                            stroke: 'yellow',\n                            fill: 'yellow',\n                            closed: true,\n                            draggable: true,\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'rectangle') {\n                        layer.add(new Konva.Rect({\n                            ...s.shape,\n                            stroke: 'green',\n                            fill: 'green',\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'circle') {\n                        layer.add(new Konva.Ring({\n                            ...s.shape,\n                            stroke: 'blue',\n                            fill: 'blue',\n                            opacity: 0.6\n                        }));\n                    } else if (s.type === 'raspberry') {\n                        layer.add(new Konva.Path({\n                            ...s.shape,\n                            data: raspberry_data,\n                            fill: 'purple',\n                            scaleX: 0.05,\n                            scaleY: 0.05\n                        }));\n                        layer.add(new Konva.Ring({\n                            id: `ringOf_${s.id}`,\n                            x: s.shape.x+10,\n                            y: s.shape.y+10,\n                            outerRadius: 0,\n                            innerRadius: 0,\n                            fill: 'red',\n                            opacity: 0.3\n                        }));\n                    }\n                }\n            }\n            const xxx = layer.findOne('#xxx');\n            if(xxx!==undefined) xxx.destroy();\n            this.point=null;\n            this.line=null;\n            let raspberryPiToUpdate = null;\n            for (const hm of updateHeatMap) {\n                raspberryPiToUpdate = layer.findOne(`#ringOf_${hm.deviceID}`);\n                if (raspberryPiToUpdate !== undefined) {\n                    raspberryPiToUpdate.setAttrs({innerRadius: raspberryPiToUpdate.getAttr('innerRadius') + 5})\n                }\n            }\n            layer.draw();\n        }\n    };\n\n    render() {\n        this.drawShapes();\n        return null;\n    }\n}\n","import React, {PureComponent} from \"react\";\nimport {Dropdown, Menu} from \"semantic-ui-react\";\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\n\nexport class Tools extends PureComponent{\n    render(){\n        const { changeFilter, changeMainFilter, selectedMainFilter, inputRangeProps, filterValue } = this.props;\n        const minDate= new Date(filterValue.min*1000);\n        const maxDate= new Date(filterValue.max*1000);\n        return <Menu icon style={{border:'0px'}}>\n            <Menu.Item style={{backgroundColor: '#4d3a5b', color:'#fff'}}\n                       name='Filter'\n                       content='Filter'\n            />\n            <Dropdown item text={selectedMainFilter}>\n                <Dropdown.Menu>\n                    <Dropdown.Item onClick={() => changeMainFilter('All')}>All</Dropdown.Item>\n                    <Dropdown.Item onClick={() => changeMainFilter('Year')}>Last Year</Dropdown.Item>\n                    <Dropdown.Item onClick={() => changeMainFilter('Month')}>Last Month</Dropdown.Item>\n                    <Dropdown.Item onClick={() => changeMainFilter('Week')}>Last Week</Dropdown.Item>\n                    <Dropdown.Item onClick={() => changeMainFilter('Day')}>Last Day</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Item>{new Date(minDate.getTime()+minDate.getTimezoneOffset() * 60000).toLocaleString()}</Menu.Item>\n            <Menu.Item style={{width:'40%'}}>\n                <InputRange\n                    minValue={inputRangeProps.min}\n                    maxValue={inputRangeProps.max}\n                    formatLabel={() => ''}\n                    style={{width:'100%'}}\n                    value={filterValue}\n                    //onChange={value => this.setState({value})}\n                    onChange={value => changeFilter(value)} />\n            </Menu.Item>\n            <Menu.Item>{new Date(maxDate.getTime()+maxDate.getTimezoneOffset() * 60000).toLocaleString()}</Menu.Item>\n        </Menu>\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { Canvas } from \"./components\";\nimport { Tools } from \"./components\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends PureComponent {\n    constructor(props){\n        super(props);\n        this.state={\n            selectedTool:null,\n            isReadyToSave:false,\n            shapes:[],\n            image: null,\n            showImage:true,\n            base64image: null,\n            filename: null,\n            updateHeatMap: [],\n            selectedMainFilter: 'All',\n            filterRange: {min:0, max:10},\n            filterValue: {min:0, max:10}\n        }\n    }\n\n    componentDidMount() {\n        const updateInterval = parseInt(document.getElementById('containerForStage').getAttribute('update_interval'));\n        this.allData();\n        setInterval(this.allData,updateInterval);\n    }\n\n    allData = () => {\n        const {selectedMainFilter, filterValue} = this.state;\n        fetch(`http://localhost:5000/allData/${selectedMainFilter}`, {\n                method: 'GET'\n            })\n            .then(res => res.json())\n            .then(results => {\n                const tempFilter = {};\n                if(filterValue.min<results.minMax.min || filterValue.min>=results.minMax.max){\n                    tempFilter.min = results.minMax.min\n                }else {\n                    tempFilter.min = filterValue.min;\n                }\n                if(filterValue.max<=results.minMax.min || filterValue.max>results.minMax.max){\n                    tempFilter.max = results.minMax.max\n                }else {\n                    tempFilter.max = filterValue.max;\n                }\n                this.setState({updateHeatMap: results.data, filterRange:results.minMax, filterValue: tempFilter})\n            });\n    };\n\n    changeFilter = (filterValue) => {\n        this.setState({filterValue});\n    };\n\n    changeMainFilter = (selectedMainFilter) => {\n        this.setState({selectedMainFilter})\n    };\n\n    render() {\n        const { updateHeatMap, selectedMainFilter, filterValue, filterRange } = this.state;\n        const filteredUpdateHeatMap = updateHeatMap.\n            filter(h => h.date>=filterValue.min && h.date<=filterValue.max);\n        ReactDOM.render(\n            <Tools\n                changeFilter={this.changeFilter}\n                changeMainFilter={this.changeMainFilter}\n                selectedMainFilter={selectedMainFilter}\n                inputRangeProps={filterRange}\n                filterValue={filterValue}\n            />, document.getElementById('tools'));\n        ReactDOM.render(\n            <Canvas\n                shapes={JSON.parse(document.getElementById('containerForStage').getAttribute('shapes').split(\"'\").join('\"'))}\n                image={document.getElementById('containerForStage').getAttribute('image')}\n                updateHeatMap={filteredUpdateHeatMap}\n                updateHeatMapCount={filteredUpdateHeatMap.length}\n            />, document.getElementById('containerForStage'));\n        return null;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}